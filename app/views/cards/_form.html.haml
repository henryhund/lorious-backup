-content_for :head do
  %script{:src => "https://js.stripe.com/v2/", :type => "text/javascript"}
  %style{:media => "screen", :type => "text/css"}
    input.invalid {
    border: 2px solid red;
    }
    
    .validation.failed:after {
    color: red;
    content: 'Validation failed';
    }
    
    .validation.passed:after {
    color: green;
    content: 'Validation passed';
    }
  %script{:type => "text/javascript"}
    = "Stripe.setPublishableKey('#{ENV['STRIPE_PUBLISHABLEKEY']}');"
  :javascript
    $(document).ready(function() {
      jQuery(function($) {
        $('[data-numeric]').payment('restrictNumeric');
        $('#cc-number').payment('formatCardNumber');
        $('#cc-exp').payment('formatCardExpiry');
        $('#cc-cvc').payment('formatCardCVC');

        $('#payment-form').submit(function(event) {
          var $form = $(this);
          event.preventDefault();
          $('input').removeClass('invalid');
          $('.validation').removeClass('passed failed');

          var cardType = $.payment.cardType($('#cc-number').val());

          $('#cc-name').toggleClass('invalid', $('#cc-name').val() === "");
          $('#cc-number').toggleClass('invalid', !$.payment.validateCardNumber($('#cc-number').val()));
          $('#cc-exp').toggleClass('invalid', !$.payment.validateCardExpiry($('#cc-exp').payment('cardExpiryVal')));
          $('#cc-cvc').toggleClass('invalid', !$.payment.validateCardCVC($('#cc-cvc').val(), cardType));

          if ( $('input.invalid').length ) {
            $('.validation').addClass('failed');
          } else {
            $('.validation').addClass('passed');
          }

          Stripe.createToken({
            name: $('#cc-name').val(),
            number: $('#cc-number').val(),
            cvc: $('#cc-cvc').val(),
            exp_month: $('#cc-exp').payment('cardExpiryVal')['month'],
            exp_year: $('#cc-exp').payment('cardExpiryVal')['year']
            }
          , stripeResponseHandler);

          // Prevent the form from submitting with the default action
          return false;
        });
      });
    });

    var stripeResponseHandler = function(status, response) {
      var $form = $('#payment-form');

      if (response.error) {
        // Show the errors on the form
        $form.find('#payment-errors').text(response.error.message);
        $form.find('button').prop('disabled', false);
        } else {
        // token contains id, last4, and card type
        var token = response.id;
        // Insert the token into the form so it gets submitted to the server
        $form.append($('<input type="hidden" name="stripeToken" />').val(token));
        // and submit
        $form.get(0).submit();
      }
    };




= simple_form_for @card, html: {class: "form-horizontal", autocomplete: "on", id: "payment-form"} do |f|
  = f.input :user_id, as: :hidden, input_html: {value: current_user.id}
  =simple_fields_for :cc do |cc|
    = cc.error_notification
    #payment-errors

    .form-inputs
      .control-group
        = cc.input :name, placeholder: "Cardholder's Name", label: "Cardholder's Name", input_html: {class: "cc-name", id: "cc-name", name: "", value: @card_name}
        = cc.input :number, placeholder: "Card Number", label: "Card Number", input_html: {"x-autocompletetype" => "cc-number", class: "cc-number", id: "cc-number", name: "", value: @card_number}
        = cc.input :expiry, placeholder: "MM/YY", label: "Expiration", input_html: {"x-autocompletetype" => "cc-exp", class: "cc-exp", id: "cc-exp", name: "", value: @card_exp}
        = cc.input :cvc, placeholder: "***", :hint => "This 3- or 4-digit code is usually found on the back of your credit card",  label: "CVC", input_html: {"x-autocompletetype" => "cc-cvc", class: "cc-cvc", id: "cc-cvc", name: ""}

    .form-actions
      = cc.button :submit, "Save Card", id: "submit-button"
